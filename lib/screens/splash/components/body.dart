import 'dart:convert';
import 'dart:math';

import 'package:cron/cron.dart';
import 'package:flutter/material.dart';
import 'package:movedor/constants.dart';
import 'package:movedor/controllers/main_controller.dart';
import 'package:movedor/screens/book/book_screen.dart';
import 'package:movedor/screens/search/search_screen.dart';
import 'package:movedor/size_config.dart';
import 'package:provider/provider.dart';
import 'package:http/http.dart' as http;

// This is the best practice
import '../components/splash_content.dart';
import '../../../components/default_button.dart';

class Body extends StatefulWidget {
  @override
  _BodyState createState() => _BodyState();
}

class _BodyState extends State<Body> {
  int currentPage = 0;
  bool loading = false;
  List<Map<String, String>> splashData = [
    {
      "text": "Entenda o que voc√™ est√° passando",
      "image": "assets/caps_illustrations/cap2-01.png"
    },
    {
      "text": "Saiba como tratar!",
      "image": "assets/caps_illustrations/cap5-01.png"
    },
    {
      "text": "Vamos l√°?",
      "image": "assets/caps_illustrations/cap6_illustration.png"
    },
  ];

  List<String> reminderList = [
    'Que tal praticar sua atividade f√≠sica agora?',
    "Est√° na hora do seu melhor rem√©dio: a atividade f√≠sica!",
    "Ol√°! Que tal se exercitar agora?",
    "Oi, t√° a√≠? üëÄ Que tal fazer aquele exerc√≠cio f√≠sico agora?",
    "‚è∞Chegou a melhor hora do dia! Hora do exerc√≠cio! ‚è∞",
    "Repita comigo: hoje eu vou me exercitar!",
    "üèÉE a√≠, qual √© a boa de hoje? Caminhada, corrida... Pode escolher, o importante √© se movimentar!",
    "Sabe o que vai cair bem hoje? Praticar atividade f√≠sica!",
    "Voc√™ j√° praticou o seu exerc√≠cio de hoje?",
    "Adivinha s√≥? Hora do exerc√≠cio!",
    "Sabe qual √© o melhor exerc√≠cio? Aquele que voc√™ sente prazer em praticar!",
    "üôã‚Äç‚ôÇÔ∏èüôã Levanta a m√£o quem vai fazer atividade f√≠sica agora!",
    "Hora de cal√ßar o t√™nis e cuidar da coluna e da mente!",
    "üòç Lembrei de voc√™! Que tal praticar atividade f√≠sica agora?",
    "Oi, lembra de mim? Est√° na hora do exerc√≠cio!",
    "üòÑ A minha cara quando lembro que est√° na hota do exerc√≠cio!",
    "Fa√ßa sol üåû ou fa√ßa chuva üåß, toda hora √© hora de cuidar da sa√∫de!",
    "‚è∞ Hora do exerc√≠cio! ‚è∞",
    "Que tal deixar o dia mais especial fazendo aquele exerc√≠cio? üòâ",
    "A notifica√ß√£o mais esperada por voc√™ chegou! Vem cuidar da sua sa√∫de!",
    "Nada melhor que estar em dia com a sua sa√∫de!",
    "Ol√°! Chegou a hora de fazer o seu exerc√≠cio!",
    "Vamos nos exercitar? Que tal come√ßar agora?",
    "Mais um dia, mais uma oportunidade de realizar os seus objetivos! Vamos nos exercitar?",
    "Que tal melhorar a sua sa√∫de agora? Vamos nos exercitar!",
    "O exerc√≠cio f√≠sico √© o melhor aliado para quem tem dor lombar!",
    "Estamos amando acompanhar voc√™! Vamos praticar mais exerc√≠cios?",
    'Nada melhor que manter a sa√∫de e ainda ficar de bom humor, n√©? Com o exerc√≠cio voc√™ consegue!',
    'N√£o esque√ßa a sua atividade f√≠sica de hoje, ok? üòâ',
    'Passando aqui para te lembrar do nosso compromisso com a sua sa√∫de de hoje! üòâ'
  ];

  List<String> reminderDay = [
    'Voc√™ sabia? O melhor rem√©dio para a dor lombar √© a atividade f√≠sica!',
    "Ter uma vida saud√°vel tr√°z diversos benef√≠cios para o nosso corpo e mente!",
    "Passando para lembrar que voc√™ √© capaz de realizar os seus objetivos!",
    "Voc√™ sabia que uma alimenta√ß√£o saud√°vel pode reduzir o seu estresse e dor?",
    "Reduz o estresse, aumenta nossa felicidade, reduz a dor... Essa √© a atividade f√≠sica!",
    "Exerc√≠cios de respira√ß√£o e relaxamento podem lhe ajudar a lidar melhor com a dor lombar!",
    "A dor lombar cr√¥nica na maioria das vezes N√ÉO √© uma condi√ß√£o grave! E voc√™ pode lidar com ela!",
    "A caminhada √© um exerc√≠cio simples, gratuito e √≥tima para a dor lombar!",
    "Sim, √© seguro se movimentar! Continue com as suas atividades!",
    "O melhor exerc√≠cio √© aquele que voc√™ gosta!",
    "Um passo √† frente e voc√™ n√£o estar√° mais no mesmo lugar!",
    "Voc√™ sabia que a dor lombar √© muito comum? Continue com suas atividade de trabalho.",
    "Ficar apenas em repouso ou receber tratamentos passivos n√£o ir√° melhorar a sua dor!",
    "Como um rem√©dio, o exerc√≠cio f√≠sico deve ser na dose certa! Voc√™ pode achar a sua dose ideal praticando!",
    "Em epis√≥dios de crise, n√£o use rem√©dios por conta pr√≥pria, somente aqueles que foram passados pelo seu m√©dico!",
    "Posso me movimentar mesmo com dor? SIMMMMMMMMMM!",
    "Voc√™ sabia que a atividade f√≠sica melhora a nossa circula√ß√£o?",
    "Que tal revisar os conceitos sobre Dor Lombar no nosso app?",
    "Acha que sabe tudo sobre dor lombar? Fa√ßa agora o nosso quiz e descubra!",
    "Permanecer realizando atividade dom√©stica, de trabalho e de laser √© a melhor maneira de lidar com a dor lombar.",
    "Voc√™ sabia? Ficar parado √© o pior a se fazer para quem tem dor cr√¥nica!",
    "Teste agora os seus conhecimentos sobre dor lombar no nosso quiz!",
    "Permane√ßa em movimento!",
    "Monitore as suas atividades f√≠sicas com a ajuda do nosso app e perceba a sua evolu√ß√£o.",
    "Quer aprender mais sobre dor lombar? Clique aqui!",
    "Voc√™ sabia que a pr√°tica do exerc√≠cio contribui para a qualidade de vida?",
    "E a√≠, como anda a sua lombar? Vem contar pra gente!",
    'E a√≠, aprendeu tudo sobre dor lombar? Vem testar seus conhecimentos no nosso quiz!',
  ];

  void sendNotification(String body, String title, String token) async {
    String keyServer =
        "AAAAHpgTV48:APA91bGAfRl9WYJ65qCBgC6fIsTbLGMrhjVDtc6n8lIZl5boWLoAulNty2Twv5ydUzVm8RnUHbXmYjU-qiAJ6KP3EJ8bpO9E0lR3Yx_HD_5Nr3jfdA68uc13vVduk8OiFL_vaznwAqiS";
    var data = {
      "notification": {"body": body, "title": title},
      "priority": "high",
      "data": {"click_action": "FLUTTER_NOTIFICATION_CLICK"},
      "to": token,
    };
    var dataBody = json.encode(data);
    final test = await http.post("https://fcm.googleapis.com/fcm/send",
        body: dataBody,
        headers: {
          "Content-Type": "application/json",
          "Authorization": "key=$keyServer"
        });

    print(test.statusCode);
  }

  @override
  Widget build(BuildContext context) {
    final controller = Provider.of<MainController>(context);

    var cron = new Cron();
    cron.schedule(new Schedule.parse('0 10 * * 1,3,5'), () async {
      var rng = new Random();
      String frase = reminderList[rng.nextInt(reminderList.length)];
      sendNotification('MoveDor', frase, controller.token);
    });
    cron.schedule(new Schedule.parse('0 13 * * *'), () async {
      var rng = new Random();
      String frase = reminderDay[rng.nextInt(reminderDay.length)];
      sendNotification('MoveDor', frase, controller.token);
    });

    return SafeArea(
      child: SizedBox(
        width: double.infinity,
        child: Column(
          children: <Widget>[
            Expanded(
              child: Image.asset(
                "assets/logo/logo_com_nome_ftransparente.png",
                height: getProportionateScreenHeight(130),
                width: getProportionateScreenWidth(115),
              ),
            ),
            Expanded(
              flex: 3,
              child: PageView.builder(
                onPageChanged: (value) {
                  setState(() {
                    currentPage = value;
                  });
                },
                itemCount: splashData.length,
                itemBuilder: (context, index) => SplashContent(
                  image: splashData[index]["image"],
                  text: splashData[index]['text'],
                ),
              ),
            ),
            Expanded(
              flex: 2,
              child: Padding(
                padding: EdgeInsets.symmetric(
                    horizontal: getProportionateScreenWidth(20)),
                child: Column(
                  children: <Widget>[
                    Spacer(),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: List.generate(
                        splashData.length,
                        (index) => buildDot(index: index),
                      ),
                    ),
                    Spacer(flex: 3),
                    DefaultButton(
                      text: "Entrar",
                      loading: loading,
                      press: () {
                        print(controller.searchComplete);
                        loginAction(controller);
                      },
                    ),
                    Spacer(),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  AnimatedContainer buildDot({int index}) {
    return AnimatedContainer(
      duration: kAnimationDuration,
      margin: EdgeInsets.only(right: 5),
      height: 6,
      width: currentPage == index ? 20 : 6,
      decoration: BoxDecoration(
        color: currentPage == index ? kPrimaryColor : Color(0xFFD8D8D8),
        borderRadius: BorderRadius.circular(3),
      ),
    );
  }

  Future loginAction(MainController controller) async {
    setState(() {
      loading = true;
    });
    //replace the below line of code with your login request
    await new Future.delayed(const Duration(seconds: 2));
    if (controller.searchComplete == true) {
      Navigator.pushNamed(context, BookScreen.routeName);
    } else if (controller.searchComplete == false) {
      Navigator.pushNamed(context, SearchScreen.routeName);
    }
  }
}
